[{"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/index.js":"1","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/App.js":"2","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/ActionConstants.js":"3","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profiles.js":"4","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/Actions.js":"5","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Routers/AppRouter.js":"6","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Navbar.js":"7","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/LandingPage.js":"8","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/About.js":"9","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Signup.js":"10","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Login.js":"11","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/MyProfile.js":"12","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profile.js":"13","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/UpdateProfile.js":"14","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Reducers/Reducers.js":"15","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Dashboard.js":"16","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Posts.js":"17","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Post.js":"18","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/AddPost.js":"19","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Spinner.js":"20","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Error.js":"21","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Comments.js":"22","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Comment.js":"23"},{"size":147,"mtime":1610909676176,"results":"24","hashOfConfig":"25"},{"size":493,"mtime":1611062929920,"results":"26","hashOfConfig":"25"},{"size":684,"mtime":1611287903967,"results":"27","hashOfConfig":"25"},{"size":649,"mtime":1611293043151,"results":"28","hashOfConfig":"25"},{"size":8684,"mtime":1611321476030,"results":"29","hashOfConfig":"25"},{"size":1413,"mtime":1611316603790,"results":"30","hashOfConfig":"25"},{"size":2114,"mtime":1611237248267,"results":"31","hashOfConfig":"25"},{"size":484,"mtime":1611238017550,"results":"32","hashOfConfig":"25"},{"size":611,"mtime":1611259883275,"results":"33","hashOfConfig":"25"},{"size":4119,"mtime":1611296540124,"results":"34","hashOfConfig":"25"},{"size":2880,"mtime":1611296334517,"results":"35","hashOfConfig":"25"},{"size":1618,"mtime":1611227490137,"results":"36","hashOfConfig":"25"},{"size":1122,"mtime":1611152139735,"results":"37","hashOfConfig":"25"},{"size":3584,"mtime":1611292942595,"results":"38","hashOfConfig":"25"},{"size":3395,"mtime":1611318880923,"results":"39","hashOfConfig":"25"},{"size":1936,"mtime":1611232086743,"results":"40","hashOfConfig":"25"},{"size":982,"mtime":1611297991906,"results":"41","hashOfConfig":"25"},{"size":2298,"mtime":1611316638251,"results":"42","hashOfConfig":"25"},{"size":1804,"mtime":1611232304100,"results":"43","hashOfConfig":"25"},{"size":173,"mtime":1611150904725,"results":"44","hashOfConfig":"25"},{"size":164,"mtime":1611230854018,"results":"45","hashOfConfig":"25"},{"size":3385,"mtime":1611322345143,"results":"46","hashOfConfig":"25"},{"size":288,"mtime":1611318540596,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vdryy9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/index.js",[],["101","102"],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/App.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/ActionConstants.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profiles.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/Actions.js",["103"],"import axios from 'axios';\nimport {\n  GET_USERS,\n  ADD_USER,\n  LOGIN_USER,\n  LOGOUT_USER,\n  UPDATE_USER,\n  GET_POSTS,\n  ADD_POST,\n  LOADING,\n  DELETE_USER,\n  DELETE_POST,\n  ERROR_RESOLVE,\n  ERROR_OCCUR,\n  ADD_LIKE,\n  ADD_COMMENT,\n  ADD_DISLIKE,\n} from './ActionConstants';\n\nexport const errorHandler = () => {};\n\nexport const getUsers = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'LOADING',\n    });\n    try {\n      const users = await axios.get('/users');\n      dispatch({\n        type: GET_USERS,\n        payload: users.data,\n      });\n      return users;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const addUser = (user) => {\n  return async (dispatch) => {\n    dispatch({\n      type: LOADING,\n    });\n    try {\n      const users = await axios.post('/users', user);\n      console.log(users);\n      dispatch({\n        type: ADD_USER,\n        payload: users.data.newUser,\n      });\n      localStorage.setItem('token', users.data.token);\n      return users;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1500);\n      return error;\n    }\n  };\n};\n\nexport const LoginUser = (user) => {\n  return async (dispatch) => {\n    dispatch({\n      type: LOADING,\n    });\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/users/login',\n        data: user,\n      });\n      console.log(res.data.user);\n      localStorage.setItem('token', res.data.token);\n      dispatch({\n        type: LOGIN_USER,\n        payload: res.data.user,\n      });\n      return res.data.user;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const LogoutUser = (user) => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios({\n        method: 'post',\n        url: '/users/logout',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      localStorage.setItem('token', null);\n      dispatch({\n        type: LOGOUT_USER,\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const updateUser = (user) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('token');\n    try {\n      const updatedUser = await axios({\n        method: 'patch',\n        url: '/users',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        data: user,\n      });\n\n      dispatch({\n        type: UPDATE_USER,\n        payload: updatedUser.data,\n      });\n      return updateUser.data;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const getPosts = () => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      const posts = await axios({\n        method: 'get',\n        url: '/posts',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(posts);\n      dispatch({\n        type: GET_POSTS,\n        payload: posts.data,\n      });\n      return posts;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const addPost = (post) => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      const newpost = await axios({\n        method: 'post',\n        url: '/posts',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        data: post,\n      });\n      dispatch({\n        type: ADD_POST,\n        payload: newpost.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const deleteUser = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: LOADING,\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const user = await axios({\n        method: 'delete',\n        url: '/users',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(user);\n      localStorage.setItem('token', null);\n      dispatch({\n        type: DELETE_USER,\n      });\n      return user;\n    } catch (error) {\n      dispatch({\n        type: ERROR_RESOLVE,\n      });\n      return error;\n    }\n  };\n};\n\nexport const deletePost = (post) => {\n  return async (dispatch) => {\n    console.log('deleeeeeeeeeee');\n    try {\n      const token = localStorage.getItem('token');\n      console.log(token, post);\n      const dpost = await axios({\n        method: 'delete',\n        url: '/posts',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        data: post,\n      });\n      console.log('dpost: ', dpost);\n      dispatch({\n        type: DELETE_POST,\n        payload: dpost.data,\n      });\n      console.log('eee');\n      return dpost;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const addLike = (post) => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      const dpost = await axios({\n        method: 'patch',\n        url: `/posts/like/${post._id}`,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      dispatch({\n        type: ADD_LIKE,\n        payload: dpost.data,\n      });\n      return dpost;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const addDislike = (post) => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      const dpost = await axios({\n        method: 'patch',\n        url: `/posts/dislike/${post._id}`,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      dispatch({\n        type: ADD_DISLIKE,\n        payload: dpost.data,\n      });\n      return dpost;\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n\nexport const addComment = (comm) => {\n  return async (dispatch) => {\n    dispatch({\n      type: LOADING,\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const comment = {\n        content: comm.content,\n      };\n      console.log(comm);\n      const newcomm = await axios({\n        method: 'patch',\n        url: `/posts/comment/${comm._id}`,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        data: comment,\n      });\n      console.log(comment);\n      dispatch({\n        type: 'ADD_COMMENT',\n        payload: newcomm.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR_OCCUR,\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ERROR_RESOLVE,\n        });\n      }, 1000);\n      return error;\n    }\n  };\n};\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Routers/AppRouter.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Navbar.js",["104"],"import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LogoutUser } from '../Redux/Actions/Actions';\nimport logo from '../spinner/fav.png';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  handleLogout() {\n    this.props.dispatch(LogoutUser(this.props.currentUser));\n  }\n\n  render() {\n    return (\n      <div id='navbar'>\n        {!this.props.isAuthenticated && (\n          <div className='container'>\n            <h1>\n              <NavLink to='/'>\n                <img src={logo} alt='logo' className='navbar-logo' />\n                SONIC\n              </NavLink>\n            </h1>\n            <ul>\n              <li>\n                <NavLink to='/about' activeClassName='activeLink'>\n                  About\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n        {this.props.isAuthenticated && (\n          <div className='container'>\n            <h1>\n              <img src={logo} alt='logo' className='navbar-logo' />\n              SONIC\n            </h1>\n            <ul>\n              <li>\n                <NavLink to='/dashboard' activeClassName='activeLink'>\n                  Dashboard\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/profiles' activeClassName='activeLink'>\n                  Profiles\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/posts' activeClassName='activeLink'>\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/' onClick={this.handleLogout}>\n                  Logout\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    currentUser: state.currentUser,\n    loading: state.loading,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/LandingPage.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/About.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Signup.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Login.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/MyProfile.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profile.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/UpdateProfile.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Reducers/Reducers.js",["105"],"import {\n  GET_USERS,\n  ADD_USER,\n  LOGIN_USER,\n  LOGOUT_USER,\n  UPDATE_USER,\n  GET_POSTS,\n  ADD_POST,\n  DELETE_USER,\n  DELETE_POST,\n  LOADING,\n  ERROR_OCCUR,\n  ERROR_RESOLVE,\n  ADD_LIKE,\n  ADD_DISLIKE,\n  ADD_COMMENT,\n} from '../Actions/ActionConstants';\n\nconst initState = {\n  posts: [],\n  users: [],\n  currentUser: undefined,\n  isAuthenticated: false,\n  loading: false,\n  error: false,\n};\n\nconst reducer = (state = initState, action) => {\n  console.log('reducer', state, action);\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: false,\n      };\n    case ADD_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: false,\n      };\n    case LOGIN_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: false,\n      };\n    case DELETE_USER:\n    case LOGOUT_USER:\n      return {\n        ...state,\n        currentUser: undefined,\n        isAuthenticated: false,\n        loading: false,\n        error: false,\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        users: state.users.map((user) => {\n          if (user._id !== action.payload._id) return user;\n          else return action.payload;\n        }),\n        loading: false,\n        error: false,\n      };\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n        error: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.payload),\n        loading: false,\n        error: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => {\n          if (action.payload._id !== post._id) return post;\n        }),\n        loading: false,\n        error: false,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case ERROR_OCCUR:\n      return {\n        ...state,\n        error: true,\n        loading: false,\n      };\n    case ERROR_RESOLVE:\n      return {\n        ...state,\n        error: false,\n        loading: false,\n      };\n    case ADD_LIKE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => {\n          if (post._id !== action.payload._id) return post;\n          else {\n            post.likes.push(state.currentUser._id);\n            return post;\n          }\n        }),\n        error: false,\n        loading: false,\n      };\n\n    case ADD_DISLIKE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => {\n          if (post._id !== action.payload._id) return post;\n          else {\n            post.dislikes.push(state.currentUser._id);\n            return post;\n          }\n        }),\n        error: false,\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id !== action.payload._id) return post;\n          else return action.payload;\n        }),\n        error: false,\n        loading: false,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default reducer;\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Dashboard.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Posts.js",["106","107"],"import React from 'react';\nimport Post from './Post';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../Redux/Actions/Actions';\nimport Spinner from './Spinner';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Spinner />;\n    }\n\n    return (\n      <div className='posts-section'>\n        <h1>Posts</h1>\n        <Link to='/addpost' className='post-button'>\n          Add new post\n        </Link>\n        <div className='posts'>\n          {this.props &&\n            this.props.posts.map((post, index) => {\n              return <Post key={index} post={post} />;\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('mapstatetoprops posts' + state.loading);\n  return {\n    posts: state.posts,\n    loading: state.loading,\n  };\n};\n\nexport default connect(mapStateToProps)(Posts);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Post.js",["108","109","110"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect, NavLink } from 'react-router-dom';\nimport { deletePost, addLike, addDislike } from '../Redux/Actions/Actions';\nimport Spinner from './Spinner';\nimport Error from './Error';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n    this.onLikeClick = this.onLikeClick.bind(this);\n    this.onDislikeClick = this.onDislikeClick.bind(this);\n  }\n\n  async onDeleteClick() {\n    await this.props.dispatch(deletePost(this.props.post));\n  }\n\n  async onLikeClick() {\n    await this.props.dispatch(addLike(this.props.post));\n  }\n\n  async onDislikeClick() {\n    await this.props.dispatch(addDislike(this.props.post));\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Spinner />;\n    }\n    return (\n      <div>\n        {this.props.post && (\n          <div className='post'>\n            <div className='post-titlebar'>\n              <h3>Title: {this.props.post.title}</h3>\n              <h5>Created by: {this.props.post.createdBy}</h5>\n            </div>\n            <p>{this.props.post.body}</p>\n            <div className='post-feedback'>\n              <button onClick={this.onLikeClick}>\n                <i className='far fa-thumbs-up fa-3x'></i>\n              </button>\n              <h3>{this.props.post.likes.length}</h3>\n              <button onClick={this.onDislikeClick}>\n                <i className='far fa-thumbs-down fa-3x'></i>\n              </button>\n              <h3>{this.props.post.dislikes.length}</h3>\n              <Link to={'/comment/' + this.props.post._id}>\n                <i className='far fa-comment-dots fa-2x'></i>\n              </Link>\n              <h3>{this.props.post.comments.length}</h3>\n              {this.props.post.creator === this.props.currentUser._id && (\n                <button onClick={this.onDeleteClick}>\n                  <i className='far fa-trash-alt fa-3x red-color'></i>\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    error: state.error,\n    pst: state.posts,\n  };\n};\n\nexport default connect(mapStateToProps)(Post);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/AddPost.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Spinner.js",["111"],"import React from 'react';\nimport spinimage from '../spinner/unnamed.gif';\n\nexport default () => {\n  return <img src={spinimage} className='spinner' alt='Loading...' />;\n};\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Error.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Comments.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Comment.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":16,"column":3,"nodeType":"118","messageId":"119","endLine":16,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":2,"column":19,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":92,"column":42,"nodeType":"123","messageId":"124","endLine":92,"endColumn":44},{"ruleId":"116","severity":1,"message":"125","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":11,"endColumn":4},{"ruleId":"116","severity":1,"message":"120","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"130","line":3,"column":26,"nodeType":"118","messageId":"119","endLine":3,"endColumn":33},{"ruleId":"116","severity":1,"message":"131","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":4,"column":1,"nodeType":"134","endLine":6,"endColumn":3},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'ADD_COMMENT' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'getPosts' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NavLink' is defined but never used.","'Error' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]