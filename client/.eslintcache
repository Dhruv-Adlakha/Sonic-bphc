[{"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/index.js":"1","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/App.js":"2","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/ActionConstants.js":"3","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profiles.js":"4","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/Actions.js":"5","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Routers/AppRouter.js":"6","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Navbar.js":"7","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/LandingPage.js":"8","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/About.js":"9","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Signup.js":"10","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Login.js":"11","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/MyProfile.js":"12","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profile.js":"13","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/UpdateProfile.js":"14","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Reducers/Reducers.js":"15","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Dashboard.js":"16","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Posts.js":"17","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Post.js":"18","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/AddPost.js":"19","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Spinner.js":"20"},{"size":147,"mtime":1610909676176,"results":"21","hashOfConfig":"22"},{"size":493,"mtime":1611062929920,"results":"23","hashOfConfig":"22"},{"size":390,"mtime":1611204962272,"results":"24","hashOfConfig":"22"},{"size":661,"mtime":1611158158535,"results":"25","hashOfConfig":"22"},{"size":4358,"mtime":1611209606923,"results":"26","hashOfConfig":"22"},{"size":1307,"mtime":1611139817407,"results":"27","hashOfConfig":"22"},{"size":1849,"mtime":1611156539256,"results":"28","hashOfConfig":"22"},{"size":412,"mtime":1611156539268,"results":"29","hashOfConfig":"22"},{"size":589,"mtime":1611156539256,"results":"30","hashOfConfig":"22"},{"size":3515,"mtime":1611156293102,"results":"31","hashOfConfig":"22"},{"size":2301,"mtime":1611156539256,"results":"32","hashOfConfig":"22"},{"size":1721,"mtime":1611156539256,"results":"33","hashOfConfig":"22"},{"size":1122,"mtime":1611152139735,"results":"34","hashOfConfig":"22"},{"size":3311,"mtime":1611156279702,"results":"35","hashOfConfig":"22"},{"size":1576,"mtime":1611207643883,"results":"36","hashOfConfig":"22"},{"size":1616,"mtime":1611203958868,"results":"37","hashOfConfig":"22"},{"size":1081,"mtime":1611210774764,"results":"38","hashOfConfig":"22"},{"size":1555,"mtime":1611210803360,"results":"39","hashOfConfig":"22"},{"size":1542,"mtime":1611156430889,"results":"40","hashOfConfig":"22"},{"size":173,"mtime":1611150904725,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1vdryy9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/index.js",[],["90","91"],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/App.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/ActionConstants.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profiles.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Actions/Actions.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Routers/AppRouter.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Navbar.js",["92"],"import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LogoutUser } from '../Redux/Actions/Actions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  handleLogout() {\n    this.props.dispatch(LogoutUser(this.props.currentUser));\n  }\n\n  render() {\n    return (\n      <div id='navbar'>\n        {!this.props.isAuthenticated && (\n          <div className='container'>\n            <h1>\n              <NavLink to='/'>SONIC</NavLink>\n            </h1>\n            <ul>\n              <li>\n                <NavLink to='/about' activeClassName='activeLink'>\n                  About\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n        {this.props.isAuthenticated && (\n          <div className='container'>\n            <h1>SONIC</h1>\n            <ul>\n              <li>\n                <NavLink to='/dashboard' activeClassName='activeLink'>\n                  Dashboard\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/profiles' activeClassName='activeLink'>\n                  Profiles\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/posts' activeClassName='activeLink'>\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to='/' onClick={this.handleLogout}>\n                  Logout\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.isAuthenticated,\n    currentUser: state.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/LandingPage.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/About.js",["93"],"import React from 'react';\n\nconst About = () => (\n  <section class='about-section'>\n    <div id='about'>\n      <h2>Created by: Dhruv Adlakha</h2>\n      <p>\n        Social Networking in Campus (SONIC) is an application which enables the\n        users to communicate with each other. The application is mainly designed\n        to prevent the use of other applications which can distract students and\n        filter the information required.\n      </p>\n      <p>\n        For suggestions contact - <span>dhruvadl25@gmail.com</span>\n      </p>\n    </div>\n  </section>\n);\n\nexport default About;\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Signup.js",["94"],"import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { addUser } from '../Redux/Actions/Actions';\nimport { connect } from 'react-redux';\nimport Spinner from './Spinner';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      status: '',\n      age: '',\n      hometown: '',\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  async onSubmitHandler(e) {\n    e.preventDefault();\n    await this.props.dispatch(addUser(this.state));\n    console.log(this.props.isAuthenticated);\n  }\n  handleChange(e) {\n    this.setState(() => {\n      return {\n        [e.target.name]: e.target.value,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <section id='signup' className='signup-back'>\n        <div className='back'>\n          <h1>Sign up</h1>\n          <form onSubmit={this.onSubmitHandler}>\n            <div className='signup-element'>\n              <label for='name'>Name</label>\n              <input\n                className='form-input'\n                type='text'\n                name='name'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='email'>Email</label>\n              <input\n                className='form-input'\n                type='email'\n                name='email'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='password'>Password</label>\n              <input\n                className='form-input'\n                type='password'\n                name='password'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='status'>Status</label>\n              <input\n                className='form-input'\n                type='text'\n                name='status'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n\n            <div className='signup-element'>\n              <label for='age'>Age</label>\n              <input\n                className='form-input'\n                type='text'\n                name='age'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='hometown'>Hometown</label>\n              <input\n                className='form-input'\n                type='text'\n                name='hometown'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='submit'>\n              <button type='submit' className='btn'>\n                Submit\n              </button>\n            </div>\n          </form>\n\n          <p>\n            Already Have an account? <NavLink to='/login'>Login here</NavLink>\n          </p>\n          {this.props.isAuthenticated && <Redirect to='/dashboard' />}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  isAuthenticated: state.isAuthenticated,\n  loading: state.loading,\n}))(Signup);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Login.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/MyProfile.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Profile.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/UpdateProfile.js",["95"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateUser } from '../Redux/Actions/Actions';\nimport { Redirect } from 'react-router';\nimport Spinner from './Spinner';\n\nclass UpdateProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props.user,\n      updated: false,\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n  onSubmitHandler(e) {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.dispatch(updateUser(this.state));\n    this.setState(() => {\n      return {\n        updated: true,\n      };\n    });\n  }\n  render() {\n    return (\n      <section id='signup'>\n        <div className='back'>\n          <h1>Update profile</h1>\n          <form onSubmit={this.onSubmitHandler}>\n            <div className='signup-element'>\n              <label for='name'>Name</label>\n              <input\n                className='form-input'\n                type='text'\n                value={this.state && this.state.name}\n                name='name'\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='email'>Email</label>\n              <input\n                className='form-input'\n                type='email'\n                defaultValue={this.state && this.state.email}\n                onChange={this.onChangeHandler}\n                name='email'\n              />\n            </div>\n            <div className='clr'></div>\n\n            <div className='signup-element'>\n              <label for='status'>Status</label>\n              <input\n                className='form-input'\n                type='text'\n                defaultValue={this.state && this.state.status}\n                onChange={this.onChangeHandler}\n                name='text'\n              />\n            </div>\n            <div className='clr'></div>\n\n            <div className='signup-element'>\n              <label for='age'>Age</label>\n              <input\n                className='form-input'\n                type='text'\n                defaultValue={this.state && this.state.age}\n                onChange={this.onChangeHandler}\n                name='age'\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='signup-element'>\n              <label for='hometown'>Hometown</label>\n              <input\n                className='form-input'\n                type='text'\n                defaultValue={this.state && this.state.hometown}\n                onChange={this.onChangeHandler}\n                name='hometown'\n              />\n            </div>\n            <div className='clr'></div>\n            <div className='submit'>\n              <button type='submit' className='btn'>\n                Update\n              </button>\n            </div>\n          </form>\n        </div>\n        {this.state.updated && <Redirect to='/myprofile' />}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.currentUser,\n  loading: state.loading,\n});\n\nexport default connect(mapStateToProps)(UpdateProfile);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Redux/Reducers/Reducers.js",["96"],"import {\n  GET_USERS,\n  ADD_USER,\n  LOGIN_USER,\n  LOGOUT_USER,\n  UPDATE_USER,\n  GET_POSTS,\n  ADD_POST,\n  DELETE_USER,\n  DELETE_POST,\n  LOADING,\n} from '../Actions/ActionConstants';\n\nconst initState = {\n  posts: [],\n  users: [],\n  currentUser: undefined,\n  isAuthenticated: false,\n  loading: false,\n};\n\nconst reducer = (state = initState, action) => {\n  console.log('reducer', state, action);\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case ADD_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case LOGIN_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case DELETE_USER:\n    case LOGOUT_USER:\n      return {\n        ...state,\n        currentUser: undefined,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        loading: false,\n      };\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.payload),\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default reducer;\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Dashboard.js",["97"],"import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteUser } from '../Redux/Actions/Actions';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  onClickHandler() {\n    this.props.dispatch(deleteUser());\n  }\n\n  render() {\n    return (\n      <div className='dashboard'>\n        <div className='dashboard-card'>\n          <i class='fa fa-users fa-5x' aria-hidden='true'></i>\n          <Link to='/profiles' className='btn'>\n            Profiles\n          </Link>\n        </div>\n        <div className='dashboard-card'>\n          <i class='fa fa-user fa-5x' aria-hidden='true'></i>\n          <Link to='/myprofile' className='btn'>\n            My profile\n          </Link>\n        </div>\n        <div className='dashboard-card'>\n          <i class='fas fa-comments fa-5x'></i>\n          <Link to='/posts' className='btn'>\n            Posts\n          </Link>\n        </div>\n        <div className='dashboard-card'>\n          <i class='far fa-edit fa-5x'></i>\n          <Link to='/updateprofile' className='btn'>\n            Update profile\n          </Link>\n        </div>\n        <div className='dashboard-card'>\n          <i class='fas fa-user-times fa-5x red-color'></i>\n          <Link to='/' className='btn red-color2' onClick={this.onClickHandler}>\n            Delete profile\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Posts.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Post.js",["98","99","100"],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/AddPost.js",[],"/home/dhruv/Desktop/SONIC-SELF-BUILD/client/src/Components/Spinner.js",["101"],"import React from 'react';\nimport spinimage from '../spinner/unnamed.gif';\n\nexport default () => {\n  return <img src={spinimage} className='spinner' alt='Loading...' />;\n};\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":19,"nodeType":"108","messageId":"109","endLine":2,"endColumn":27},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":15},{"ruleId":"106","severity":1,"message":"111","line":11,"column":3,"nodeType":"108","messageId":"109","endLine":11,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"112","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":3,"column":16,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"113","line":4,"column":22,"nodeType":"108","messageId":"109","endLine":4,"endColumn":30},{"ruleId":"114","severity":1,"message":"115","line":4,"column":1,"nodeType":"116","endLine":6,"endColumn":3},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'LOADING' is defined but never used.","'Link' is defined but never used.","'getPosts' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]